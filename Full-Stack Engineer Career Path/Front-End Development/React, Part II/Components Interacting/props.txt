Prop: Information that gets passed from one component to another is known as props.
<Greeting name="Jamel" /> -- name could be anything
<Greeting myInfo={["Astronaut", "Narek", "43"]} /> -- when passing a non-string info, need to have {}

Render a Component's props
function Button(props) {
  return <button>{props.displayText}</button>;
}
it is the same as:
function Button({displayText}) {
  return <button>{displayText}</button>;
}

function Product(props) {
  return (
    <div>
      <h1>{props.name}</h1>
      <h2>{props.price}</h2>
      <h3>{props.rating}</h3>
    </div>       
  );
}
function App() {
  return <Product name="Apple Watch" price = {399} rating = "4.5/5.0" />;
}

Props in React travel in a one-way direction, from the top to bottom, parent to child.

You can do more with props than just display them. You can also use props to make decisions.
function LoginMsg(props) {
  if (props.password === 'a-tough-password') {
    return <h2>Sign In Successful.</h2>
  } else {
    return <h2>Sign In Failed..</h2>
  }
}

props.children
props.children will return everything in between a componentâ€™s opening and closing JSX tags.

Giving Default Values to props
defaultProps 
function Example(props) {
  return <h1>{props.text}</h1>
}
 
Example.defaultProps = {
  text: 'This is default text',
};
OR
function Example({text='This is default text'}) {
   return <h1>{text}</h1>
}
OR
function Example(props) {
  const {text = 'This is default text'} = props;
  return <h1>{text}</h1>
}
